# 工作流名称，显示在GitHub Actions的界面中
name: Java CI with Maven

# 触发条件：当代码推送到master分支或针对master分支发起pull_request时触发
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:  # 添加手动触发选项
    inputs:  # 可选：定义手动触发时的输入参数
      environment:
        description: '手动触发'
        required: false
        default: 'dev'

jobs:
  build:
    # 指定运行环境为Ubuntu 22.04
    runs-on: ubuntu-22.04

    steps:
      # 第一步：检出代码。使用actions/checkout@v2将仓库代码下载到工作目录
      - uses: actions/checkout@v2

      # 第二步：设置JDK环境。安装指定的JDK版本（Java 8），并启用Maven依赖缓存以加速后续构建
      # - name: Set up JDK 8
      #   uses: actions/setup-java@v2
      #   with:
      #     java-version: '8'     # 指定JDK版本为8
      #     distribution: 'adopt' # 使用AdoptOpenJDK发行版
      #     cache: maven          # 启用Maven依赖缓存，避免重复下载依赖
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'  # AdoptOpenJDK 已迁移至 Temurin
          java-version: '8'
          cache: 'maven'  # Maven依赖

      # 第三步：执行Maven构建。跳过测试阶段（-Dmaven.test.skip=true），仅打包项目
      - name: Build with Maven
        run: mvn -B package -Dmaven.test.skip=true --file pom.xml
        # -B：非交互模式（批处理模式）
        # package：执行Maven生命周期中的package阶段
        # -Dmaven.test.skip=true：跳过测试（适用于紧急构建或依赖未稳定的场景）
        # --file pom.xml：显式指定pom.xml路径（默认会自动查找）

      # 将打包文件存储为工作流产物（Artifact）​          
      # 上传 .zip 文件
      - name: Upload ZIP Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kkFileView-zip
          path: /home/runner/work/kkFileView/kkFileView/server/target/kkFileView-*.zip
          retention-days: 7  # 可选：设置保留天数（默认90天）
      # 上传 .tar.gz 文件
      - name: Upload TAR.GZ Artifact
        uses: actions/upload-artifact@v4
        with:
          name: kkFileView-tar-gz
          path: /home/runner/work/kkFileView/kkFileView/server/target/kkFileView*.tar.gz
          retention-days: 7
